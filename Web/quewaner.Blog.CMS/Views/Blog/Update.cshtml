
@{
    ViewData["Title"] = "编辑博客";
    Layout = "~/Views/Shared/_LayuiLayout.cshtml";
    var articleTypeList = ViewData["ArticleTypeList"] as List<ShowArticleTypeDto>;
}
@model ShowArticleDto
@section Styles{

    <link href="~/editormd/css/editormd.css" rel="stylesheet" />
    <style>
        #add_article_icon_img img {
            height: 137.5px;
            max-width: 100%;
            border: 3px solid;
        }

        .layui-upload-drag {
            margin-bottom: 1px;
            height: 143px;
            padding: 18px;
        }
    </style>

}

<div class="layui-row" style="">
    <div class="layui-col-md8">
        <fieldset class="table-search-fieldset">
            <legend>文章信息</legend>
            <form class="layui-form layui-form-pane">
                <div class="layui-row">
                    <div class="layui-form-item">
                        <label class="layui-form-label">标题</label>
                        <div class="layui-input-block">
                            <input type="text" name="title" autocomplete="off" class="layui-input">
                        </div>
                    </div>


                </div>
                <div class="layui-row">
                    <div class="layui-form-item">

                        <label class="layui-form-label">摘要</label>
                        <div class="layui-input-block">
                            <input type="text" name="summaryInfo" autocomplete="off" class="layui-input">
                        </div>

                    </div>
                </div>

                <div class="layui-row">
                    <div class="layui-col-md6">
                        <label class="layui-form-label">分类</label>
                        <div class="layui-input-block">
                            <select name="articleTypeId">
                                <option value="">请选择</option>
                                @if (articleTypeList is not null and { Count: > 0 })
                                {
                                    foreach (var item in articleTypeList)
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                    <div class="layui-inline layui-col-md6">
                        <button class="layui-btn layui-btn-primary" lay-submit lay-filter="add-article" style="margin-left:10px"><i class="layui-icon layui-icon-add-circle-fine"></i> 发布</button>
                        <button class="layui-btn layui-btn-primary" lay-submit lay-filter="save-article"><i class="layui-icon layui-icon-star"></i> 存为草稿箱</button>
                    </div>

                </div>

            </form>

        </fieldset>
    </div>
    <div class="layui-col-md4">
        <fieldset class="table-search-fieldset">
            <legend>上传封面</legend>
            <div class="layui-upload-drag layui-col-md6" id="add_article_icon">
                <i class="layui-icon"></i>
                <p>点击上传，或将文件拖拽到此处</p>
            </div>
            <div class="layui-col-md6" id="add_article_icon_img">
                <img src="https://quewaner-1304279371.file.myqcloud.com/%E7%BC%BA%E5%A9%89%E5%84%BF/quewaner.png/add_article_icon?a=@DateTimeOffset.UtcNow.ToUnixTimeSeconds()" id="icon" alt="上传成功后渲染" asp-append-version="true">
            </div>
        </fieldset>

    </div>
</div>




<div id="add-article-editormd"></div>



@section Scripts{
    <script src="~/editormd/js/editormd.js"></script>
    <script src="~/editormd/js/editormdUploadImg.js" asp-append-version="true"></script>
    <script src="~/js/layui-helper.js" asp-append-version="true"></script>
    <script src="~/js/layer-helper.js" asp-append-version="true"></script>
    <script type="text/javascript">
        var md = {content : "@Model.Content.Replace("\"", "\\\"")" };
        
        var testEditor;
        $(function () {
            //初始化富文本框
            testEditor = editormd("add-article-editormd", {
                width: "100%",
                height: 620,
                path: '/editormd/lib/',
                //theme: "dark", //头部工具栏主题
                //previewTheme: "dark", //展示主题
                editorTheme: "mdn-like", //编辑器主题
                markdown: md.content, //赋值md内容
                codeFold: true,
                //syncScrolling : false,
                saveHTMLToTextarea: true, // 保存 HTML 到 Textarea
                searchReplace: true,
                //watch : false,                // 关闭实时预览
                htmlDecode: "style,script,iframe|on*", // 开启 HTML 标签解析，为了安全性，默认不开启
                //toolbar  : false,             //关闭工具栏
                //previewCodeHighlight : false, // 关闭预览 HTML 的代码块高亮，默认开启
                emoji: true,
                taskList: true,
                tocm: true, // Using [TOCM]
                tex: true, // 开启科学公式TeX语言支持，默认关闭
                flowChart: true, // 开启流程图支持，默认关闭
                sequenceDiagram: true, // 开启时序/序列图支持，默认关闭,
                //dialogLockScreen : false,   // 设置弹出层对话框不锁屏，全局通用，默认为true
                //dialogShowMask : false,     // 设置弹出层对话框显示透明遮罩层，全局通用，默认为true
                //dialogDraggable : false,    // 设置弹出层对话框不可拖动，全局通用，默认为true
                //dialogMaskOpacity : 0.4,    // 设置透明遮罩层的透明度，全局通用，默认值为0.1
                //dialogMaskBgColor : "#000", // 设置透明遮罩层的背景颜色，全局通用，默认为#fff
                imageUpload: true,
                imageFormats: ["jpg", "jpeg", "gif", "png", "bmp", "webp", 'txt'],
                imageUploadURL: "/Upload/EditorUploadFile",
                toolbarAutoFixed: true, //固定导航栏
                //emoji: true,
                //taskList: true,
                //tex: true,  // 默认不解析
                //flowChart: true,  // 默认不解析
                //sequenceDiagram: true,  // 默认不解析
                onload: function () {
                    //console.log('onload', this);
                    //this.fullscreen();
                    //支持粘贴图片
                    initPasteDragImg(this);
                    //this.unwatch();
                    //this.watch().fullscreen();

                    //this.setMarkdown("#PHP");
                    //this.width("100%");
                    //this.height(480);
                    //this.resize("100%", 640);
                }
            });

            $("#get-md-btn").bind('click', function () {
                //lert(testEditor.getHTML());
                alert();
            });

            layuiHelper.formRender();

         //上传文件
         layuiHelper.uploadFile('#add_article_icon', '/Upload/LayuiUploadFile', '#icon');

        //发布
        layuiHelper.formEvent("add-article", "submit", function (data) {
             var postData = data.field;
            postData.icon = $('#icon').attr('src');
            postData.content = testEditor.getMarkdown();
            postData.status = 1;

            layerHelper.confirm(null, '确定要发布文章吗？',
                function (index) {
                layuiHelper.ajaxPostAsync('@_staticConfigs.GenerateAddBlogApiUrl()', postData, function (res) {
                layerHelper.closeAllLoading();
                    if (res.code == 1) {
                        layerHelper.msg("发布成功!", function () {
                            layui.use(['miniTab'], function () {
                                var miniTab = layui.miniTab;
                                //关闭当前窗口
                                miniTab.deleteCurrentByIframe();
                            });
                        }, 6);
                    }
                }, null);

                layer.close(index);
                }
            )

        });



        //存为草稿
        layuiHelper.formEvent("save-article", "submit", function (data) {

            var postData = data.field;
            postData.icon = $('#icon').attr('src');
            postData.content = testEditor.getMarkdown();
            postData.status = 0;

            layerHelper.confirm(null, '确定要保存到草稿箱吗？',
                function () {
                      layuiHelper.ajaxPostAsync('@_staticConfigs.GenerateAddBlogApiUrl()', postData, function (res) {
                layerHelper.closeAllLoading();
                          if (res.code == 1) {
                              layerHelper.msg("保存成功!", function () {
                                  layui.use(['miniTab'], function () {
                                      var miniTab = layui.miniTab;
                                      //关闭当前窗口
                                      miniTab.deleteCurrentByIframe();
                                  });}, 6);
                          }
            }, function (res) { });
                }
            )
        });


        });


    </script>

}