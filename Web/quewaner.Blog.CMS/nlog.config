<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwConfigExceptions="true"
      internalLogLevel="info"
     >
	<!--autoReload:修改后自动加载-->
	<!--throwConfigExceptions:NLog日志系统抛出异常-->
	<!--internalLogLevel:内部日志的级别-->
	<!--internalLogFile:内部日志保存路径，日志的内容大概就是NLog的版本信息，配置文件的地址等等  internalLogFile="nlogconfigsInfo\ISP\internal-nlog.txt"-->

	<!-- the targets to write to -->
	<!--输出日志的配置，用于rules读取-->
	<targets>
		<!-- 将日志写入文件中  -->
		<target xsi:type="File" name="logFile"     fileName="log\Blog\Blog-nlog-logFile-${shortdate}.log" layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:form.at=tostring}" />
		<!--同样是将文件写入日志中，写入的内容有所差别，差别在layout属性中体现。写入日志的数量有差别，差别在路由逻辑中体现-->
		<target xsi:type="File" name="logFile-web" fileName="log\Blog\Blog-nlog-logFileWeb-${shortdate}.log" layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}" />
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--路由顺序会对日志打印产生影响。路由匹配逻辑为顺序匹配。-->
		<!--All logs, including from Microsoft-->
		<logger name="*" minlevel="Trace" writeTo="logFile" />
		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<!--以Microsoft打头的日志将进入此路由，由于此路由没有writeTi属性，所有会被忽略-->
		<!--且此路由设置了final，所以当此路由被匹配到时。不会再匹配此路由下面的路由。未匹配到此路由时才会继续匹配下一个路由-->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<!-- BlackHole -->
		<!--上方已经过滤了所有Microsoft.*的日志，所以此处的日志只会打印除Microsoft.*外的日志-->
		<logger name="*" minlevel="Warn" writeTo="logFile-web" />
	</rules>
</nlog>
